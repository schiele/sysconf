#!/bin/bash
failnote()
{
	tail -n 29 .build.log |
	head -n 25 |
	git notes append --no-separator -m "FAILED:" -F - $MERGEBASE
}
set -eu
cd ~/sbcl
if test $# = 0; then
	git checkout master
	git pull --rebase
else
	git checkout "$1" ||
	git checkout "sbcl-$1"
fi
./generate-version.sh
ver=$(sed -ne 's,"\(.*\)",\1,p' version.lisp-expr | tr '/' '_')
destdir=~/tools/sbcl/"$ver"
if test -d "$destdir"; then
	echo "$ver is already installed."
	exit 1
fi
export SBCL_MAKE_JOBS=-j$(nproc)
MERGEBASE=$(git merge-base HEAD origin/master)
git notes append --separator='======================================================================' -m "BUILD: $ver" $MERGEBASE
git notes append --no-separator -m "bootstrap: $(sbcl --version)" -m "date: $(date)" $MERGEBASE
trap failnote ERR
exec 3>&1 4>&2 1> >(exec tee .build.log) 2>&1
set -x
git notes append --no-separator -m "build" $MERGEBASE
PATH=~/tools/sbcl/master/bin:"$PATH" ./make.sh --prefix="$destdir"
git notes append --no-separator -m "test" $MERGEBASE
cd tests
./run-tests.sh
git notes append --no-separator -m "doc" $MERGEBASE
cd ../doc/manual
make
cd ../..
git notes append --no-separator -m "install" $MERGEBASE
./install.sh
set +x
exec 1>&3 2>&4 3>&- 4>&-
trap ERR
git notes append --no-separator -m "SUCCESS" $MERGEBASE
mv .build.log "$destdir/"
git commit -m 'Update math journal' xfloat-math.lisp-expr || true
if test $# = 0; then
	rm -f ~/tools/sbcl/master
	ln -s "$ver" ~/tools/sbcl/master
	git push --force
fi
echo "$ver installed."
